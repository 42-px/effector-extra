{"version":3,"file":"effector-extra.umd.js","sources":["../src/attach-wrapper.ts","../src/effector-event-batcher/index.ts"],"sourcesContent":["import {\n    Effect, attach, createEffect,\n} from \"effector\"\n\nexport function attachWrapper<AttachP, AttachD, AttachF, P, D, F>({\n    effect,\n    mapParams,\n    mapResult,\n    mapError,\n}: {\n  effect: Effect<P, D, F>\n  mapParams: (params: AttachP) => P\n  mapResult: ({ params, result }: { params: P; result: D }) => AttachD\n  mapError: ({ params, error }: { params: P; error: F }) => AttachF\n}): Effect<AttachP, AttachD, AttachF>\nexport function attachWrapper<AttachP, AttachD, P, D, F>({\n    effect,\n    mapParams,\n    mapResult,\n}: {\n  effect: Effect<P, D, F>\n  mapParams: (params: AttachP) => P\n  mapResult: ({ params, result }: { params: P; result: D }) => AttachD\n}): Effect<AttachP, AttachD, F>\nexport function attachWrapper<AttachP, AttachF, P, D, F>({\n    effect,\n    mapParams,\n    mapError,\n}: {\n  effect: Effect<P, D, F>\n  mapParams: (params: AttachP) => P\n  mapError: ({ params, error }: { params: P; error: F }) => AttachF\n}): Effect<AttachP, D, AttachF>\nexport function attachWrapper(args: any): any {\n    return attach({\n        mapParams: (originalParams) => args.mapParams(originalParams),\n        effect: createEffect({\n            handler: (params: any) => {\n                let promise: any = args.effect(params)\n                if (args.mapResult) {\n                    promise = promise.then(\n                        (result: any) => args.mapResult({ params, result })\n                    )\n                }\n                if (args.mapError) {\n                    promise = promise.catch((error: any) => {\n                        throw args.mapError({ params, error })\n                    })\n                }\n                return promise\n            },\n        }),\n    })\n}\n","import {\n    createEvent,\n    createStore,\n    Event,\n    guard,\n    sample,\n} from \"effector\"\n\nexport function batchEvents<T>(trigger: Event<T>, timeout: number): Event<T[]> {\n    const event = createEvent<T[]>()\n    const pushStore = createEvent<T>()\n    const resetStore = createEvent()\n    const timeoutEnd = createEvent()\n    const $storedEvents = createStore<T[]>([])\n    $storedEvents\n        .on(pushStore, (prevValue, value) => [...prevValue, value])\n        .reset(resetStore)\n\n    let timeoutId: any\n    trigger.watch((payload) => {\n        if (timeoutId !== undefined) {\n            clearTimeout(timeoutId)\n            pushStore(payload)\n        } else {\n            event([payload])\n        }\n        timeoutId = setTimeout(() => {\n            timeoutId = undefined\n            timeoutEnd()\n        }, timeout)\n    })\n    guard({\n        source: sample(\n            $storedEvents,\n            timeoutEnd,\n            (store) => store,\n        ),\n        filter: $storedEvents.map((store) => Boolean(store.length)),\n    }).watch((payload) => {\n        event(payload)\n        resetStore()\n    })\n    return event\n}\n"],"names":["args","attach","mapParams","originalParams","effect","createEffect","handler","params","promise","mapResult","then","result","mapError","catch","error","trigger","timeout","event","createEvent","pushStore","resetStore","timeoutEnd","$storedEvents","createStore","timeoutId","on","prevValue","value","reset","watch","payload","undefined","clearTimeout","setTimeout","guard","source","sample","store","filter","map","Boolean","length"],"mappings":"0TAiC8BA,GAC1B,OAAOC,SAAO,CACVC,UAAYC,GAAmBH,EAAKE,UAAUC,GAC9CC,OAAQC,eAAa,CACjBC,QAAUC,IACN,IAAIC,EAAeR,EAAKI,OAAOG,GAW/B,OAVIP,EAAKS,YACLD,EAAUA,EAAQE,KACbC,GAAgBX,EAAKS,UAAU,CAAEF,OAAAA,EAAQI,OAAAA,MAG9CX,EAAKY,WACLJ,EAAUA,EAAQK,MAAOC,IACrB,MAAMd,EAAKY,SAAS,CAAEL,OAAAA,EAAQO,MAAAA,OAG/BN,+BCzCQO,EAAmBC,GAC9C,MAAMC,EAAQC,gBACRC,EAAYD,gBACZE,EAAaF,gBACbG,EAAaH,gBACbI,EAAgBC,cAAiB,IAKvC,IAAIC,EAwBJ,OA5BAF,EACKG,GAAGN,EAAW,CAACO,EAAWC,IAAU,IAAID,EAAWC,IACnDC,MAAMR,GAGXL,EAAQc,MAAOC,SACOC,IAAdP,GACAQ,aAAaR,GACbL,EAAUW,IAEVb,EAAM,CAACa,IAEXN,EAAYS,WAAW,KACnBT,OAAYO,EACZV,KACDL,KAEPkB,QAAM,CACFC,OAAQC,SACJd,EACAD,EACCgB,GAAUA,GAEfC,OAAQhB,EAAciB,IAAKF,GAAUG,QAAQH,EAAMI,WACpDZ,MAAOC,IACNb,EAAMa,GACNV,MAEGH"}