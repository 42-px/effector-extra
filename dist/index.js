import{attach as r,createEffect as e,createEvent as t,createStore as a,guard as o,sample as m}from"effector";function n(t){return r({mapParams:r=>t.mapParams(r),effect:e({handler:r=>{let e=t.effect(r);return t.mapResult&&(e=e.then(e=>t.mapResult({params:r,result:e}))),t.mapError&&(e=e.catch(e=>{throw t.mapError({params:r,error:e})})),e}})})}function c(r,e){const n=t(),c=t(),p=t(),s=t(),u=a([]);let f;return u.on(c,(r,e)=>[...r,e]).reset(p),r.watch(r=>{void 0!==f?(clearTimeout(f),c(r)):n([r]),f=setTimeout(()=>{f=void 0,s()},e)}),o({source:m(u,s,r=>r),filter:u.map(r=>Boolean(r.length))}).watch(r=>{n(r),p()}),n}export{n as attachWrapper,c as batchEvents};
//# sourceMappingURL=index.js.map
