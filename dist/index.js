import{createEffect as e,createEvent as t,createStore as n,guard as r,sample as o}from"effector";function a(t){const n=t.domain?t.domain.effect({name:"effect",sid:"-xn2rd6"}):e({name:"effect",sid:"-x614yz"});return n.use(e=>{let n=t.effect(t.mapParams(e),{name:"promise",sid:"-9qez7q"});return t.mapResult&&(n=n.then(n=>t.mapResult({params:e,result:n}))),t.mapError&&(n=n.catch(n=>{throw t.mapError({params:e,error:n})})),n}),n}function i(e,a){const i=t({name:"event",sid:"-qsq21n"}),s=t({name:"pushStore",sid:"-99i15u"}),m=t({name:"resetStore",sid:"-ka34j3"}),c=t({name:"timeoutEnd",sid:"-8qf3eg"}),f=n([],{name:"$storedEvents",sid:"tj0mgu"});let u;return f.on(s,(e,t)=>[...e,t]).reset(m),e.watch(e=>{void 0!==u?(clearTimeout(u),s(e)):i([e]),u=setTimeout(()=>{u=void 0,c()},a)}),r({"ɔ":[{source:o({"ɔ":[f,c,e=>e],config:{name:"source",sid:"4pit6z"}}),filter:f.map(e=>Boolean(e.length))}],config:{sid:"c06kr4"}}).watch(e=>{i(e),m()}),i}const s=()=>new Map,m=()=>new Map;function c({domain:e,effect:t}){return{createMethod:function(n){return a({domain:e,effect:t,...n})}}}export{a as attachWrapper,i as batchEvents,c as createService,s as mockEffects,m as mockStores};
//# sourceMappingURL=index.js.map
