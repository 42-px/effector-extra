import{createEffect as e,createEvent as t,createStore as r,guard as o,sample as n}from"effector";function a(t){const r=t.domain?t.domain.effect():e();return r.use(e=>{let r=t.effect(t.mapParams(e));return t.mapResult&&(r=r.then(r=>t.mapResult({params:e,result:r}))),t.mapError&&(r=r.catch(r=>{throw t.mapError({params:e,error:r})})),r}),r}function c(e,a){const c=t(),m=t(),f=t(),u=t(),i=r([]);let s;return i.on(m,(e,t)=>[...e,t]).reset(f),e.watch(e=>{void 0!==s?(clearTimeout(s),m(e)):c([e]),s=setTimeout(()=>{s=void 0,u()},a)}),o({source:n(i,u,e=>e),filter:i.map(e=>Boolean(e.length))}).watch(e=>{c(e),f()}),c}const m=()=>new Map,f=()=>new Map;function u({domain:e,effect:t}){return{createMethod:function(r){return a({domain:e,effect:t,...r})}}}export{a as attachWrapper,c as batchEvents,u as createService,m as mockEffects,f as mockStores};
//# sourceMappingURL=index.js.map
