import{attach as e,createEffect as r,createEvent as t,createStore as a,guard as o,sample as n}from"effector";function m(t){return e({mapParams:e=>t.mapParams(e),effect:r({handler:e=>{let r=t.effect(e);return t.mapResult&&(r=r.then(r=>t.mapResult({params:e,result:r}))),t.mapError&&(r=r.catch(r=>{throw t.mapError({params:e,error:r})})),r}})})}function c(e,r){const m=t(),c=t(),p=t(),s=t(),u=a([]);let f;return u.on(c,(e,r)=>[...e,r]).reset(p),e.watch(e=>{void 0!==f?(clearTimeout(f),c(e)):m([e]),f=setTimeout(()=>{f=void 0,s()},r)}),o({source:n(u,s,e=>e),filter:u.map(e=>Boolean(e.length))}).watch(e=>{m(e),p()}),m}const p=()=>new Map,s=()=>new Map;export{m as attachWrapper,c as batchEvents,p as mockEffects,s as mockStores};
//# sourceMappingURL=index.js.map
